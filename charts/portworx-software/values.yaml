# Default values for portworx-software
# This is a YAML-formatted file.

# Global values inherited from parent chart
global:
  imageRegistry: ""
  registrySecret: ""
  clusterName: ""
  namespace: ""

# Software deployment configuration
deployCluster: true
generateStorageClusterForMigration: true

# Basic configuration
imageVersion: "3.3.0"
imagePullPolicy: "Always"
clusterName: "mycluster"

# Platform specific installations
openshiftInstall: false
isTargetOSCoreOS: false
pksInstall: false
EKSInstall: false
GKEInstall: false
AKSInstall: false
OKEInstall: false

# Upgrade settings
nonDisruptivek8sUpgrade: false
skipHealthChecks: false

# Storage configuration
drives: "none"
usefileSystemDrive: false
usedrivesAndPartitions: false
provider: ""
maxStorageNodesPerZone: 0
maxStorageNodes: 0
journalDevice: ""
cacheDevices: ""
systemMetadataDevice: ""

# KVDB configuration
internalKVDB: true
kvdbDevice: ""
etcdEndPoint: ""

# Etcd configuration with defaults
etcd:
  certPath: ""
  caPath: ""
  credentials: ""

# Security configuration
secretType: "k8s"
security:
  enabled: false
  auth:
    guestAccess: "Enabled"
    selfSigned:
      tokenLifetime: ""
      issuer: ""
      sharedSecret: ""

# Network configuration
dataInterface: "none"
managementInterface: "none"
serviceType: "none"

# Runtime configuration
runtimeOptions: ""
featureGates: ""
miscArgs: "none"

# Environment variables
envVars: "none"
envs: []

# Registry configuration
customRegistryURL: ""
registrySecret: ""
licenseSecret: ""

# Disable default storage classes
disableStorageClass: false

# Resources configuration
resources: {}

# Delete strategy configuration
deleteStrategy:
  type: ""

# Update strategy configuration
updateStrategy:
  type: "RollingUpdate"
  disruption:
    allow: true
  maxUnavailable: 1
  minReadySeconds: 0
  autoUpdateComponents: "Once"

# Service account configuration
serviceAccount:
  create: true
  annotations: {}
  name: ""
  hook:
    create: true
    name: ""

# Cluster token configuration
clusterToken:
  create: false
  secretName: "px-vol-encryption"
  serviceAccountName: "px-create-cluster-token"

# Require PX enabled tag
requirePxEnabledTag: false

# CSI configuration
csi:
  enabled: true
  topology:
    enabled: false
  installSnapshotController: false

# Stork configuration
stork:
  enabled: true
  storkVersion: ""
  args: ""
  volumes: []
  env: []

# AutoPilot configuration
autopilot:
  enabled: true
  image: ""
  lockImage: false
  args: ""
  env: []
  volumes: []
  providers: []

# Deploy on master (for POC)
deployOnMaster: false

# Monitoring
monitoring:
  prometheus:
    enabled: false
    exportMetrics: false
    alertManager: false
    resources: {}
    replicas: 1
    retention: "24h"
    retentionSize: ""
    storage: {}
    volumes: []
    volumeMounts: []
    securityContext: {}
  telemetry: true
  grafana: false

# Custom metadata
customMetadata:
  annotations:
    pod:
      storage: ""
    service:
      portworxApi: ""
      portworxService: ""
      portworxKVDBService: ""
  labels:
    service:
      portworx-api: ""
    deployment:
      "*": ""
      autopilot: ""
      px-csi-ext: ""
      px-plugin: ""
      px-plugin-proxy: ""
      portworx-pvc-controller: ""
      stork: ""
      stork-scheduler: ""
      px-prometheus-operator: ""
    daemonset:
      "*": ""
      portworx-api: ""
      portworx-proxy: ""
      px-telemetry-phonehome: ""
    prometheus:
      px-prometheus: ""
    alertmanager:
      portworx: ""
    pod:
      "*": ""
      storage: ""
      portworx-kvdb: ""

# Additional volumes that can be mounted
volumes: []

# Node affinity settings
nodeAffinity: {}

# Pod security context
securityContext: {}

# Image pull secrets
imagePullSecrets: []

# Pod annotations
podAnnotations: {}

# Pod security context  
podSecurityContext: {}

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity rules
affinity: {}

# Name override
nameOverride: ""
fullnameOverride: ""
